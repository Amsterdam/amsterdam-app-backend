stages:
- stage: Build
  jobs:
  - job: Build

    pool:
      vmImage: ubuntu-latest

    variables:
      - group: Python Django Variables
      - name: tag
        value: backend-$(Build.SourceBranchName)
      - name: branch
        value: $(Build.SourceBranch)

    steps:
    - task: DownloadSecureFile@1
      displayName: 'Download fcm_credentials.json'
      name: fcm_credentials
      inputs:
        secureFile: fcm_credentials.json

    - script: |
        pushd '$(projectRoot)'

        # Copy fcm_credentials.json into source directory
        echo 'cp $(fcm_credentials.secureFilePath) .'
        cp $(fcm_credentials.secureFilePath) .

        # Create connection environment variable
        echo "Create the Django enviroment file to connect with the database: ./env"
        echo "POSTGRES_PASSWORD=$(PSQL_AZ_UPASS)\nPOSTGRES_USER=$(PSQL_AZ_UNAME)\nPOSTGRES_DB=$(PSQL_AZ_DB)\nWEB_USERNAME=$(WEB_USERNAME)\nWEB_PASSWORD=$(WEB_PASSWORD)" > ./env

        # Build the docker container
        echo 'Building docker container with tag: $(tag)'
        docker build -f Dockerfile-Azure -t $(tag) .
        docker tag $(tag) cccaappont01registry.azurecr.io/$(tag)
        echo 'Artifact is tagged as: "$(tag)"'
      displayName: 'Build docker-image'

    - script: |
        # Push to docker registry (Which one is based on branch)
        if [ $(branch) == 'main' ]; then
          docker login -u $(DOCKER_PR_UNAME) -p $(DOCKER_PR_UPASS) $(DOCKER_PR_URL)
          echo 'Pushing artifact to: "cccaappprd01registry.azurecr.io"'
          docker push cccaappprd01registry.azurecr.io/$(tag)
        else
          docker login -u $(DOCKER_UT_UNAME) -p $(DOCKER_UT_UPASS) $(DOCKER_UT_URL)
          echo 'Pushing artifact to: "cccaappont01registry.azurecr.io"'
          docker push cccaappont01registry.azurecr.io/$(tag)
        fi
      displayName: 'Push docker-image to registry'
